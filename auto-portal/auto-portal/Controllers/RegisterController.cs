using auto_portal.DAL;
using auto_portal.Helpers;
using auto_portal.Models;
using auto_portal.ViewModel;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Web;
using System.Web.Mvc;

namespace auto_portal.Controllers
{
    public class RegisterController : Controller
    {
        private readonly VehicleManager manager;
        // GET: Register

        public RegisterController()
        {
            manager = new VehicleManager();
        }
        public ActionResult Index()
        {
            return View();
        }

        public ActionResult AddNewRegister()
        {
            return View();
        }

        public ActionResult ChooseYourCar()
        {
            return View();
        }

        [HttpPost]
        public ActionResult ChooseYourCar(CarChoiceViewModel vm)
        {
            return RedirectToAction("AddNewRegister", new { @id = vm.CarId });
        }


        [HttpGet]
        public ActionResult GetCars(string searchTerm, int pageSize, int pageNum)
        {
            //Get the paged results and the total count of the results for this query. 
            List<Vehicle> cars = manager.GetVehicles(searchTerm, pageSize, pageNum);
            int carsCount = manager.GetVehiclesCount(searchTerm, pageSize, pageNum);

            //Translate the attendees into a format the select2 dropdown expects
            Select2PagedResult pagedCars = CarsToSelect2Format(cars, carsCount);

            //Return the data as a jsonp result
            return new JsonpResult
            {
                Data = pagedCars,
                JsonRequestBehavior = JsonRequestBehavior.AllowGet
            };
        }

        private static Select2PagedResult CarsToSelect2Format(IEnumerable<Vehicle> vehicles, int totalCars)
        {
            var jsonCars = new Select2PagedResult {Results = new List<Select2Result>()};

            //Loop through our attendees and translate it into a text value and an id for the select list
            foreach (var a in vehicles)
            {
                jsonCars.Results.Add(new Select2Result { id = a.Id.ToString(), text = a.Producer + " " + a.Model + " (" + a.GetProductionYears + " ) " });
            }
            //Set the total count of the results from the query.
            jsonCars.Total = totalCars;

            return jsonCars;
        }

        //public async Task<ActionResult> AddNewRegister()
        //{

        //}
    }

    //Extra classes to format the results the way the select2 dropdown wants them
    public class Select2PagedResult
    {
        public int Total { get; set; }
        public List<Select2Result> Results { get; set; }
    }

    public class Select2Result
    {
        public string id { get; set; }
        public string text { get; set; }
    }
}