using auto_portal.Models;
using Microsoft.AspNet.Identity;
using Microsoft.AspNet.Identity.EntityFramework;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Web;

namespace auto_portal.DAL
{
    public class AutoPortalContext : IdentityDbContext<ApplicationUser>
    {
        public DbSet<Vehicle> Vehicles { get; set; }
        public DbSet<VehicleRegister> VehicleRegisters { get; set; }
        public DbSet<News> News { get; set; }
        public DbSet<Defect> Defects { get; set; }
        public DbSet<Opinion> Opinions { get; set; }

        public AutoPortalContext() : base("Name=AutoPortalContext")
        {
            Database.SetInitializer(new AutoPortalDBInitializer());
        }
        public static AutoPortalContext Create()
        {
            return new AutoPortalContext();
        }
    }

    public class AutoPortalDBInitializer : DropCreateDatabaseIfModelChanges<AutoPortalContext>
    {
        protected override void Seed(AutoPortalContext context)
        {
            base.Seed(context);
            Vehicle vehicle1 = new Vehicle
            {
                Id = 0,
                Producer = "Volkswagen",
                Model = "Golf",
                ProductionStartYear = 1997,
                ProductionEndYear = 2003,
                Engine = "1.6 SR"
            };


            Vehicle vehicle2 = new Vehicle
            {
                Id = 0,
                Producer = "Mazda",
                Model = "Rx5",
                ProductionStartYear = 1998,
                ProductionEndYear = 2005,
                Engine = "1.9 Tdi"
            };


            Vehicle vehicle3 = new Vehicle
            {
                Id = 0,
                Producer = "BMW",
                Model = "520i",
                ProductionStartYear = 1999,
                ProductionEndYear = 2006,
                Engine = "2.0"
            };

            Vehicle vehicle4 = new Vehicle
            {
                Id = 0,
                Producer = "BMW",
                Model = "318i",
                ProductionStartYear = 1996,
                ProductionEndYear = 2003,
                Engine = "2.5"
            };

            Vehicle vehicle5 = new Vehicle
            {
                Id = 0,
                Producer = "Volkswagen",
                Model = "Polo",
                ProductionStartYear = 2004,
                ProductionEndYear = 2010,
                Engine = "1.4"
            };

            Vehicle vehicle6 = new Vehicle
            {
                Id = 0,
                Producer = "Seat",
                Model = "Leon",
                ProductionStartYear = 1996,
                ProductionEndYear = 2002,
                Engine = "1.9TDI"
            };

            Vehicle vehicle7 = new Vehicle
            {
                Id = 0,
                Producer = "Ferrari",
                Model = "LaFerrari",
                ProductionStartYear = 2016,
                ProductionEndYear = 0,
                Engine = "4.5"
            };

            Vehicle vehicle8 = new Vehicle
            {
                Id = 0,
                Producer = "Mercedes",
                Model = "SLS",
                ProductionStartYear = 2010,
                ProductionEndYear = 2014,
                Engine = "6.0"
            };

            context.Vehicles.Add(vehicle1);
            context.Vehicles.Add(vehicle2);
            context.Vehicles.Add(vehicle3);
            context.Vehicles.Add(vehicle4);
            context.Vehicles.Add(vehicle5);
            context.Vehicles.Add(vehicle6);
            context.Vehicles.Add(vehicle7);
            context.Vehicles.Add(vehicle8);



            context.SaveChanges();

            var userManager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(context));
            var roleManager = new RoleManager<IdentityRole>(new RoleStore<IdentityRole>(context));

            const string name = "admin@autoportal.pl";
            const string password = "P@ssw0rd";
            const string roleName = "Administrator";


            var user = userManager.FindByName(name);
            if (user == null)
            {
                user = new ApplicationUser { UserName = name, Email = name, UserData = new UserData() };
                var result = userManager.Create(user, password);
                result = userManager.SetLockoutEnabled(user.Id, false);
            }

            //Create Role Admin if it does not exist
            var role = roleManager.FindByName(roleName);
            if (role == null)
            {
                role = new IdentityRole(roleName);
                var roleresult = roleManager.Create(role);
            }

            //var user = userManager.FindByName(name);
            //if (user == null)
            //{
            //    user = new ApplicationUser { UserName = name, Email = name };
            //    var result = userManager.Create(user, password);
            //    result = userManager.SetLockoutEnabled(user.Id, false);
            //}

            // Add user admin to Role Admin if not already added
            var rolesForUser = userManager.GetRoles(user.Id);
            if (!rolesForUser.Contains(role.Name))
            {
                var result = userManager.AddToRole(user.Id, role.Name);



                context.SaveChanges();
            }
        }
    }
}