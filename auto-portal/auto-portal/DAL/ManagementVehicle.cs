using System;
using System.Collections.Generic;
using System.Linq;
using auto_portal.Models;
using auto_portal.DAL;

namespace auto_portal.Helpers
{
    public class ManagementVehicle : IManagementVehicle
    {
        //public IQueryable<Vehicle> _vehicles { get; set; }
        readonly AutoPortalContext db;
        public ManagementVehicle()
        {
            db = new AutoPortalContext();
        }
        public List<Vehicle> GetVehicles(string searchTerm, int pageSize, int pageNum)
        {
            return GetVehiclesQuery(searchTerm).OrderBy(q=>q.Producer)
                .Skip(pageSize * (pageNum - 1))
                .Take(pageSize)
                .ToList();
        }

        public int GetVehiclesCount(string searchTerm, int pageZie, int pageNum)
        {
            return GetVehiclesQuery(searchTerm)
                .Count();
        }

        public IQueryable<Vehicle> GetVehiclesQuery(string searchTerm)
        {
            var _vehicles = db.Vehicles.AsQueryable();
            searchTerm = searchTerm.ToLower();

            return _vehicles
                .Where(
                    a =>
                    a.Producer.Contains(searchTerm) ||
                    a.Model.Contains(searchTerm)
                );

           
         }

        public Vehicle GetVehicleById(int id)
        {
            return db.Vehicles.FirstOrDefault(q => q.Id == id);
        }

        public void AddNewRegister(VehicleRegister register)
        {
            throw new NotImplementedException();
        }

        public void UpdateRegister(VehicleRegister register)
        {
            throw new NotImplementedException();
        }

        public VehicleRegister GetRegisterById(int id)
        {
            throw new NotImplementedException();
        }

        public IEnumerable<VehicleRegister> GetRegisters(string searchTerm, int pageSize, int pageNum)
        {
            throw new NotImplementedException();
        }
    }
}