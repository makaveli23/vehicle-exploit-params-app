using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using auto_portal.Models;
using auto_portal.DAL;
using auto_portal.Extensions;

namespace auto_portal.Helpers
{
    public class VehicleManager : IVehicleManager
    {
        //public IQueryable<Vehicle> _vehicles { get; set; }
        List<Vehicle> vehicles;
        AutoPortalContext db;
        public VehicleManager()
        {
            db = new AutoPortalContext();
            //vehicles.Add(new Vehicle
            //{
            //    Id = 0,
            //    Producer = "Volkswagen",
            //    Model = "Golf",
            //    ProductionYears = new int[] { 1998, 1999, 2000, 2001, 2002, 2003, 2004 },
            //    Engine = "1.6 SR"

            //});
            //vehicles.Add(new Vehicle
            //{
            //    Id = 0,
            //    Producer = "Mazda",
            //    Model = "Rx5",
            //    ProductionYears = new int[] { 1998, 1999, 2000, 2001, 2002, 2003, 2004 },
            //    Engine = "1.6 SR"

            //});
            //vehicles.Add(new Vehicle
            //{
            //    Id = 0,
            //    Producer = "BMW",
            //    Model = "M3",
            //    ProductionYears = new int[] { 1998, 1999, 2000, 2001, 2002, 2003, 2004 },
            //    Engine = "1.6 SR"

            //});

            vehicles = db.Vehicles.ToList();
            
            int a = 3;
            //_vehicles = vehicles.AsQueryable(); 
        }
        public List<Vehicle> GetVehicles(string searchTerm, int pageSize, int pageNum)
        {
            return GetVehiclesQuery(searchTerm).OrderBy(q=>q.Producer)
                .Skip(pageSize * (pageNum - 1))
                .Take(pageSize)
                .ToList();
        }

        public int GetVehiclesCount(string searchTerm, int pageZie, int pageNum)
        {
            return GetVehiclesQuery(searchTerm)
                .Count();
        }

        public IQueryable<Vehicle> GetVehiclesQuery(string searchTerm)
        {
            var _vehicles = db.Vehicles.AsQueryable();
            searchTerm = searchTerm.ToLower();

            return _vehicles
                .Where(
                    a =>
                    a.Producer.Contains(searchTerm) ||
                    a.Model.Contains(searchTerm)
                );

           
         }

        
    }
}