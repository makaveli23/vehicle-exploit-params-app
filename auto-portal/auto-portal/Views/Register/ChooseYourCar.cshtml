@model auto_portal.ViewModel.CarChoiceViewModel
@{
    ViewBag.Title = "Wybierz swój samochód";
}
@Styles.Render("~/bundles/fileinputcss")
@Styles.Render("~/bundles/select2v3css")

<h1 class="register">Krok 1. Wybierz swój samochód</h1>

<div class="container form-container">
    @using (Html.BeginForm())
    {
        <div class="row">
            <div class="col-sm-offset-2 col-sm-8">
                <div class="row">
                    <div class="col-xs-12 selector-container" style="height: 50px;">
                        @Html.TextBoxFor(a => a.CarId, new { id = "carChoice", Style = "width: 100%" })  
                        @Html.ValidationMessageFor(a => a.CarId)
                    </div>
                </div>
               

            </div>
        </div>
        <div class="input-group-addon">
            <div class="row">
                <div class="col-xs-12">
                    <input type="submit" value="Dalej" class="btn btn-sm btn-danger" />
                </div>
            </div>
        </div>
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/select2v3")
    @Scripts.Render("~/bundles/fileinput")
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
            $(document).ready(function() {
                var attendeeUrl = '@Url.Action("GetCars", "Register")';
                var pageSize = 20;

                $("#carChoice").select2(
                {
                    placeholder: 'Wprowadź nazwę samochodu:',
                    //Does the user have to enter any data before sending the ajax request
                    minimumInputLength: 0,
                    allowClear: true,
                    ajax: {
                        //How long the user has to pause their typing before sending the next request
                        quietMillis: 150,
                        //The url of the json service
                        url: attendeeUrl,
                        dataType: 'jsonp',
                        //Our search term and what page we are on
                        data: function (term, page) {
                            return {
                                pageSize: pageSize,
                                pageNum: page,
                                searchTerm: term
                            };
                        },
                        results: function (data, page) {
                            //Used to determine whether or not there are more results available,
                            //and if requests for more data should be sent in the infinite scrolling                    
                            var more = (page * pageSize) < data.Total;
                            return { results: data.Results, more: more };
                        }
                    }
                });              
            });
    </script>
}
